name: Deploy App to AWS

on: 
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo "DB_HOST=${{secrets.DB_HOST}}" >> .env
          echo "DB_NAME=${{secrets.DB_NAME}}" >> .env
          echo "DB_PASSWORD=${{secrets.DB_PASSWORD}}" >> .env
          echo "DB_PORT=${{secrets.DB_PORT}}" >> .env
          echo "DB_USER=${{secrets.DB_USER}}" >> .env
          echo "SECRET_KEY=${{secrets.SECRET_KEY}}" >> .env

      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push to Docker
        run: |
          docker build -t ${{secrets.DOCKER_USERNAME}}/goroute:latest .
          docker push ${{secrets.DOCKER_USERNAME}}/goroute:latest

      - name: Deploy to AWS EC2
        env:
          AWS_KEY: ${{ secrets.AWS_KEY }}
          AWS_IP: ${{ secrets.AWS_IP }}
          AWS_USERNAME: ${{ secrets.AWS_USERNAME }}
        run: |
          echo "$AWS_KEY" > aws.pem
          chmod 600 aws.pem

          scp -o StrictHostKeyChecking=no -i aws.pem .env "$AWS_USERNAME@$AWS_IP:/home/$AWS_USERNAME/.env"

          ssh -o StrictHostKeyChecking=no -i aws.pem "$AWS_USERNAME@$AWS_IP" << EOF
          set -e
          echo "Starting deployment on AWS instance"

          echo "${{ secrets.DOCKER_PASSWORD }}" | sudo docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

          docker network inspect goroute >/dev/null 2>&1 || docker network create goroute

          docker rm -f goroute || true
          docker rm -f postgres-db || true
          docker rm -f redis || true

          docker pull ${{secrets.DOCKER_USERNAME}}/goroute:latest || true

          docker run -d \
            --name redis \
            --network goroute \
            -p 6379:6379 \
            redis:latest

          docker run -d \
            --name postgres-db \
            --network goroute \
            -e POSTGRES_DB=goroute_pjt \
            -e POSTGRES_USER=postgres \
            -e POSTGRES_PASSWORD=admin123 \
            -v postgres_data:/var/lib/postgresql/data \
            -p 5432:5432 \
            --restart unless-stopped \
            postgres:latest

          docker run -d \
            --name goroute \
            --network goroute \
            -p 8000:8000 \
            -e DB_HOST=postgres-db \
            -e DB_NAME=goroute_pjt \
            -e DB_USER=postgres \
            -e DB_PASSWORD=admin123 \
            -e SECRET_KEY="${{ secrets.SECRET_KEY }}" \
            --restart unless-stopped \
            ${{secrets.DOCKER_USERNAME}}/goroute:latest

          echo "Deployment completed!"
          EOF
